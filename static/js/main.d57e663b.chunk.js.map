{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperation","Date","toDateString","varient","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","takeData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d57e663b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__aOorf\",\"card\":\"Cards_card__1gADF\",\"infected\":\"Cards_infected__3IWoi\",\"recovered\":\"Cards_recovered__1Gril\",\"deaths\":\"Cards_deaths__3LKaE\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n   \r\n    if(!confirmed){\r\n        return <h1>loading...</h1>\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n         <Grid container spacing={3} justify=\"center\">\r\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n             <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Infected People</Typography>\r\n                 <Typography variant=\"h5\">\r\n                      <CountUp start={0} end={confirmed.value} duration={2.5} seperation=\",\"/>\r\n                 </Typography>\r\n                 <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                 <Typography varient=\"body2\">Number of active infected cases of COVID-19</Typography>\r\n             </CardContent>\r\n           </Grid>\r\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n             <CardContent>\r\n                 <Typography color=\"textSecondary\" gutterBottom>Recovered Cases</Typography>\r\n                 <Typography variant=\"h5\">\r\n                      <CountUp start={0} end={recovered.value} duration={2.5} seperation=\",\"/>\r\n                 </Typography>\r\n                 <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                 <Typography varient=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n             </CardContent> \r\n           </Grid>\r\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n             <CardContent>\r\n                 <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                 <Typography variant=\"h5\">\r\n                      <CountUp start={0} end={deaths.value} duration={2.5} seperation=\",\"/>\r\n                 </Typography>\r\n                 <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                 <Typography varient=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n             </CardContent>\r\n           </Grid>\r\n         </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n export const fetchData = async () => {\r\n    try {\r\n        const { data: {confirmed,recovered,deaths,lastUpdate} } = await axios.get(url);\r\n\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async ()=> {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchcountries = async () => {\r\n   try {\r\n       const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n       return countries.map((country) => country.name);\r\n   } catch (error) {\r\n       console.log(error);\r\n       \r\n   }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport { Line,  } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport { } from '@material-ui/core/colors';\r\n\r\nconst Chart = () => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n             setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    });\r\n\r\n   const lineChart = (\r\n       dailyData.length\r\n       ? (\r\n     <Line\r\n        data = {{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) =>confirmed),\r\n                label: 'infected',\r\n                borderColor:'#3333ff',\r\n                fill: true,\r\n            },{\r\n                data: dailyData.map(({ deaths }) =>deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n     />) : null\r\n   );\r\n\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        {lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;\r\n","import React, {/*useState, useEffect*/} from 'react';\r\nimport {/*NativeSelect, FormControl*/} from '@material-ui/core';\r\n\r\n//\r\nimport styles from './CountryPicker.module.css'\r\n//import {Countries, countries} from '../../api';\r\n\r\nconst CountryPicker = () => {\r\n    //const [fetchCountries,setFetchedCountries] = useState([]);\r\n\r\n   // useEffect(() => {\r\n        //const fetchCountries = async () => {\r\n           // setFetchedCountries(await countries);\r\n       // }\r\n       // fetchCountries();\r\n   // }, [setFetchedCountries]);\r\n   \r\n    return(\r\n        //<FormControl className={styles.FormControl}>\r\n           // <NativeSelect>\r\n                \r\n           // </NativeSelect>\r\n       //</FormControl>\r\n       <h2>You can check real data of COVID19 effected cases</h2>\r\n    )\r\n}\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n//import Cards from './components/Cards/Cards';\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const takeData = await fetchData();\r\n        this.setState({data:takeData});\r\n    }\r\n\r\n    render(){\r\n        const {data} = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n               <Cards data={data}/>\r\n               <CountryPicker/>\r\n               <Chart/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__Zv2Zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__C4oH4\"};"],"sourceRoot":""}